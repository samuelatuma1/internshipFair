<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="<%= '/static/auth/signup.css' %>">
    <style>
        .summary{
            display : flex;
            flex-wrap : wrap;
            justify-content: space-between;
            padding : 10px;
        }
        .profileImg img{
            display : block;
            max-width : 100%;
            border-radius : 50%;
            object-fit: cover;
            width : 200px;
            height : 200px;
            margin : auto;
        }
        .profileImg{
            width : 100%;
        }
        .summary main{
            width : 100%;
        }
        /* .summary main header{
            display : flex;
            justify-content: space-between;
        } */
        .summary main button {
            background-color: red;
            color : rgb(255, 246, 247);
            border : 0px;
            box-shadow: 0px 0px 2px 0px red;
            padding : 10px;
            cursor : pointer;
        }
        @media screen and (min-width : 768px){
            .profileImg{
                width : 30%;
            }
            
            .summary main {
                width : 65%;
            }
        }
        button.modify{
            display : block;
            margin-right : 0px;
            float : right;
            clear: both;
        }
        .hideModifiable{
            display : none;
        }
        .modifyinput{
            padding : 10px;
            border : 1px solid rgb(218, 215, 215);
            border-radius: 20px;
            display : block;
        }
        .hideMakeChanges{
            display : none
        }
        .showChangeBtns{
            display : block
        }
    </style>

</head>
<body>
    <div>
        <% if (locals.signedInIntern) { %> 
            <%= signedInIntern %>
        <%} %>
    </div>
    <section aria-label="InternSummary" class="summary">

        <div class="profileImg" aria-label="Profile Image">
            <img src="/static/auth/runopics.jpg">
        </div>

        <main aria-details="user profile details">
            <header data-edit="Intern">
                <button class="modify">Modify</button>
               <strong> First Name  </strong><span class="modifiable" data-edit="Intern" data-name="first_name"><% if (locals.signedInIntern) { %><%= locals.signedInIntern.first_name %><% } %>
                </span>
                <strong>Last Name : </strong><span class="modifiable" data-name="last_name" ><%= locals.signedInIntern.last_name %></span>

                <br><strong>Email  </strong><span class="nonmodifiable"><%= locals.signedInIntern.email %></span>

                <p>
                    <strong>Currently studying at </strong>
                    <span class="modifiable" data-name="institution"> <%= locals.signedInIntern.institution %></span>
                    <strong>City </strong><span class="modifiable" data-name="city"><%= locals.signedInIntern.city %></span>
                </p>
                
                <!-- Please Include this div in places where you will want to make Changes to userData / profile-->
                <div class="hideMakeChanges ChangeBtns">
                    <button class="cancelModified">Cancel</button>
                    <button class="saveModified">Save Changes</button>
                </div>
                <script>
                    // Modifies Model of parent Element with modified data
                    const modifyBtns = document.querySelectorAll('.modify')

                    modifyBtns.forEach(btn => btn.onclick = allowModify)

                    function convertToModifiable(modifiable){
                        const input = document.createElement("input")
                        input.classList.add("modifyinput")

                        // modifiables should have attributes data-name that'll serve as keys for the inputs
                        input.name = modifiable.getAttribute("data-name")

                        input.value = modifiable.innerText
                        modifiable.parentElement.insertBefore(input, modifiable)
                       
                        // Hide Original 
                        modifiable.classList.add('hideModifiable')
                    }
                    function allowModify(e){
                        // get all modifiable in btn's parent
                        let parent = e.target.parentElement
                        // disable clicking again
                        e.target.disabled = true
                        let modifiables = parent.querySelectorAll('.modifiable')

                        modifiables.forEach(modifiable => {
                            convertToModifiable(modifiable)
                        })
                        // show save amd cancel buttons
                        const makeChanges = parent.querySelector(".ChangeBtns")
                        makeChanges.classList.remove("hideMakeChanges")
                    }

                    // Cancel Button to cancel changes
                    const cancelModifiedBtns = document.querySelectorAll(".cancelModified")
                    /** 
                     * @params {Object} e : -> Event Emitter object
                     * Cancels changes made to a particular container
                    */
                    const cancelChanges = e => {
                        // Get parent of parent
                        const containerToCancelChanges = e.target.parentElement.parentElement
                        const inputs = containerToCancelChanges.querySelectorAll(".modifyinput")

                        // show all hidden modifiable
                        let modifiables =containerToCancelChanges.querySelectorAll('.modifiable')
                        modifiables.forEach(modifiable => modifiable.classList.remove("hideModifiable"))
                        // Remove inputs
                        inputs.forEach(input => input.remove())

                        // make modify btn clickable again
                        const modifyBtn = containerToCancelChanges.querySelector('.modify')
                        modifyBtn.disabled = false
 
                        // hide save and cancel buttons
                        const makeChanges = containerToCancelChanges.querySelector(".ChangeBtns")
                        makeChanges.classList.add("hideMakeChanges")

                    }
                    cancelModifiedBtns.forEach(btn => {
                        btn.addEventListener("click", cancelChanges)
                    })

                    const saveModifieds = document.querySelectorAll(".saveModified")
                    saveModifieds.forEach(btn => {
                        btn.addEventListener("click", saveChanges)
                    })

                    function saveChanges(e) {
                        // get container housesing changes made 
                        const changedContainer = e.target.parentElement.parentElement
                        const modelToModify = changedContainer.getAttribute("data-edit")

                        console.log(changedContainer)
                        const modifyinputs = changedContainer.querySelectorAll('.modifyinput')
                        const modifiedData = {}
                        modifyinputs.forEach(input => {
                            modifiedData[input.name] = input.value

                        })

                        submitChanges(modifiedData, modelToModify)
                    }


                    /**
                     * @params {Object} data :-> An object representation of changes made 
                     * @params {String} modelToModify :-> The collection name to be modified
                    */
                    async function submitChanges(data, modelToModify){
                        console.log(data)
                        console.log(modelToModify)
                        const submitData = await fetch('./profile_page', {
                            method : 'PUT',
                            redirect: 'follow',
                            headers : {
                                'Content-Type' : 'application/json'
                            },
                            body : JSON.stringify({data, modelToModify})
                        })
                    }
                    
                    
                </script>
            </header>

            

        </main>
    </section>
</body>
</html>

<!-- <button>Edit Profile</button>
                
                <div class="try">
                    <style>
                        .hide{
                            display : none;
                        }
                        .save{
                            background-color: teal;
                        }
                    </style>
                    <p>Hello You</p>
                    <p>How are you</p>
                    <button id="mod">Modify</button>
                    <button class="save hide">Save</button>
                    <script>
                        let modifyBtn =  document.querySelector("#mod")
                        modifyBtn.onclick = (e) => {
                            
                            const elems = e.target.parentElement.querySelectorAll('p')
                            elems.forEach(p => {
                            let textArea = document.createElement('textarea')
                            textArea.classList.add('modify')
                            textArea.value = p.innerText
                            p.parentElement.insertBefore(textArea, p)

                            // Hide all Ps
                            p.classList.add('hide')

                        })
                        e.target.classList.add('hide')
                        
                        let saveBtn = document.querySelector(".save")
                        saveBtn.classList.remove('hide')
                        }

                        let saveBtn = document.querySelector(".save")
                        saveBtn.onclick = (e) => {
                            const elems = e.target.parentElement.querySelectorAll('textarea')
                            elems.forEach(tarea => {
                                let nextP = tarea.nextElementSibling
                                nextP.innerText = tarea.value
                                nextP.classList.remove('hide')
                                tarea.remove()
                            })
                            e.target.classList.add('hide')
                            let modifyBtn =  document.querySelector("#mod")
                            modifyBtn .classList.remove('hide')


                        }
                    </script> -->